<template>
    <div class="login-panel">
        <div class="login-panel-head clearfix">
            <div class="login-tab col3">
                <a :class="{'active':isTab == 0}" @click="switchTab(0)">快捷登录</a>
            </div>
            <div class="login-tab col3">
                <a :class="{'active':isTab == 1}" @click="switchTab(1)">密码登录</a>
            </div>
        </div>
        <!-- //快捷登录 开始 -->
        <div class="login-panel-body login" id="normalLoginPanel" :class="{'hide':isTab == 1}">
            <div class="form-group">
                <input placeholder="请输入你的手机号码" v-model="telVal" />
                <i class="backImg userTel"></i>
            </div>
            <div class="form-group codeBox">
                <div class="line-8">
                    <input placeholder="请输入验证码" v-model="passVal" />
                    <i class="backImg userCode"></i>
                </div>
                <div class="line-4 codeImg" style="border:none">
                    <div class="text-center btn btn-primary button  login-btn" @click="getCode" :disabled="isClick">{{codeStr}}</div>
                </div>
            </div>
            <div class="form-group ">
                <div id="dom_id_one"></div>
            </div>
            <div class="checkbox ">
                <label class="text-dark-lter">
                    <input type="checkbox" :checked="checked" v-model="checked" value="option1"> 一周内保持登录状态
                </label>
            </div>
            <button type="submit" class="btn button   btn-primary login-btn" @click="speedLogin">
                <strong>立即登录</strong>
            </button>

        </div>
        <!-- //快捷登录 end -->
        <!-- //密码登录 开始 -->
        <div class="login-panel-body login" :class="{'hide':isTab == 0}" id="verifyLoginPanel">

            <div class="form-group">
                <input placeholder="请输入用户名" v-model="nameVal" />
                <i class="backImg userHead"></i>
            </div>
            <div class="form-group codeBox">
                <div class="line-8">
                    <input placeholder="请输入验证码" v-model="codeVal" />
                    <i class="backImg userCode"></i>
                </div>
                <div class="line-4 codeImg">
                    <img :src="imgSrc" alt="" @click="updateCode">
                </div>
            </div>
            <div class="form-group ">
                <input type="password" placeholder="请输入密码" v-model="passVal2" />
                <i class="backImg userLock"></i>
            </div>
            <div class="form-group ">
                <div id="dom_id_one"></div>
            </div>
            <div class="checkbox ">
                <label class="text-dark-lter">
                    <input type="checkbox" v-model="checked" :checked="checked" value="option1"> 一周内保持登录状态
                </label>
            </div>

            <button type="submit" class="btn button   btn-primary login-btn" @click="pwdLogin">
                <strong>立即登录</strong>
            </button>
        </div>
        <!-- //密码登录 end -->
        <div class="otherLogin" style="padding: 0px 30px 20px 30px;overflow:hidden;line-height:28px;">
            <!-- <span class="wxLogin" alt="微信授权" title="微信授权" @click="wxLogin"></span> -->
            <span class="fl accReg">
                <router-link to='/passport/register' class="col">账号注册</router-link>
            </span>
            <span class="fl accForget">
                <router-link to='/passport/forget'>忘记密码？</router-link>
            </span>
            <span class="fr">
                <img src="../../assets/images/login/wx2.png" alt="微信授权" title="微信授权" @click="wxLogin">
                <img src="../../assets/images/login/qq.png" alt="QQ授权" title="QQ授权">
            </span>
        </div>
    </div>
</template>
<script>
import { Http } from "~/plugins/axios.js";

export default {
    layout: "login",
    components: {},
    data() {
        return {
            isTab: 0,
            telVal: "",
            passVal: "",
            checked: 1,
            nameVal: "",
            codeVal: "",
            passVal2: "",
            imgSrc: "",
            isClick: false,
            codeStr: "获取验证码",
            redirectURL: "/" //定向路由
        };
    },

    mounted() {
        let rediretUrl = this.$route;
        // console.log(rediretUrl);
        if (rediretUrl) {
            this.redirectURL = rediretUrl;
        }
        this.updateCode();
    },
    methods: {
        update(val) {
            this.string = val;
        },
        switchTab(num) {
            this.isTab = num;
        },
        updateCode() {
            Http("imageidentifycode/send", {}, "post").then(res => {
                let img = res.data.data.verifycode;
                this.imgSrc = "data:image/jpeg;base64," + img;
            });
        },
        getCode() {
            if (!/^1(3|4|5|7|8|9)\d{9}$/.test(this.telVal)) {
                return;
            }
            let min = 60;
            Http(
                "sms/sentidentifycode",
                { phoneNo: this.telVal, type: "123" },
                "post"
            ).then(res => {
                console.log("数据", res);
                let json = res.data;
                //console.log("短信", json);
                if (json.code == 0) {
                    alert("发送成功");
                    this.isClick = true;
                    let timer = setInterval(() => {
                        if (min == 1) {
                            this.isClick = false;
                            clearInterval(timer);
                            this.codeStr = "重新获取";
                        } else {
                            min--;
                            if (min < 10) min = "0" + min;
                            this.codeStr = "重新获取( " + min + " )";
                        }
                    }, 1000);
                } else {
                    alert("发送失败");
                }
            });
            // this.$axios(
            //     {
            //         type: "post",
            //         url: "sms/sentidentifycode",
            //         data: { phoneNo: this.telVal, type: "123" },
            //         success: res => {
            //             let json = res.data;
            //             //console.log("短信", json);
            //             if (json.code == 0) {
            //                 this.$message({
            //                     message: "短信已发送，请注意查收",
            //                     type: "success",
            //                     duration: 1000
            //                 });
            //                 this.isClick = true;
            //                 let timer = setInterval(() => {
            //                     if (min == 1) {
            //                         this.isClick = false;
            //                         clearInterval(timer);
            //                         this.codeStr = "重新获取";
            //                     } else {
            //                         min--;
            //                         if (min < 10) min = "0" + min;
            //                         this.codeStr = "重新获取( " + min + " )";
            //                     }
            //                 }, 1000);
            //             } else {
            //                 this.$message({
            //                     message: json.msg,
            //                     type: "error",
            //                     duration: 2000
            //                 });
            //             }
            //         }
            //     },
            //     1
            // );
        },
        speedLogin() {
            //短信验证码登录
            if (this.telVal == "" || this.passVal == "") {
                // this.$message({
                //     message: "请填写完整的登录信息",
                //     type: "error"
                // });
                alert("请填写完整的登录信息");
                return;
            }

            let obj = {
                phoneNo: this.telVal,
                smsVerifyCode: this.passVal,
                time: 7
            };
            Http("regist/loginByCode", obj, "post").then(res => {
                let data = res.data;
                console.log("用户", data);
                if (data.code == 0) {
                    this.$store.dispatch("firmLogin", data.data).then(() => {
                        // 调用store的方法
                        this.$router.push("/");
                    });
                } else {
                }
            });
            // this.$axios(
            //     {
            //         type: "post",
            //         url: "regist/loginByCode",
            //         data: obj,
            //         success: res => {
            //             let data = res.data;
            //             //console.log("用户信息",data)
            //             if (data.code == 0) {
            //                 this.setCookie(data.data);
            //                 this.$message({
            //                     message: "登录成功",
            //                     type: "success",
            //                     duration: 800,
            //                     onClose: () => {
            //                         if (this.$route.query.back) {
            //                             this.$router.go(-1);
            //                         } else {
            //                             this.$router.push("/");
            //                         }
            //                     }
            //                 });
            //             } else {
            //                 this.$message({
            //                     message: data.msg,
            //                     type: "error",
            //                     duration: 1000
            //                 });
            //             }
            //         }
            //     },
            //     1
            // );
        },
        pwdLogin() {
            //密码登录

            if (
                this.nameVal == "" ||
                this.codeVal == "" ||
                this.passVal2 == ""
            ) {
                alert("请填写完整的登录信息");
                return;
            }

            let obj = {
                imageVerifyCode: this.codeVal,
                loginPwd: this.passVal2,
                phoneNo: this.nameVal,
                type: "",
                time: this.checked ? 7 : 0
            };
            Http("registuser/login", obj, "post").then(res => {
                let data = res.data;
                console.log("用户信息", data);
                if (data.code == 0) {
                    this.$store.dispatch("firmLogin", data.data).then(() => {
                        // 调用store的方法
                        this.$router.push("/");
                    });
                } else {
                    console.log("登陆出错");
                }
            });
            // this.$axios(
            //     {
            //         type: "post",
            //         url: "registuser/login",
            //         data: obj,
            //         success: res => {
            //             let data = res.data;
            //             //console.log("用户信息",data)
            //             if (data.code == 0) {
            //                 this.setCookie(data.data);
            //                 this.$message({
            //                     message: "登录成功",
            //                     type: "success",
            //                     duration: 2000,
            //                     onClose: () => {
            //                         // this.$router.push("/");
            //                         if (this.$route.query.back) {
            //                             this.$router.go(-1);
            //                         } else {
            //                             this.$router.push("/");
            //                         }
            //                     }
            //                 });
            //             } else {
            //                 this.$message({
            //                     message: data.msg,
            //                     type: "error",
            //                     duration: 2000
            //                 });
            //             }
            //         }
            //     },
            //     1
            // );
        },
        setCookie(data) {
            //console.log("用户信息",data)
            if (this.checked) {
                Cookie.setCookie("dqcUserKey", JSON.stringify(data), "d7");
            } else {
                Cookie.setCookie("dqcUserKey", JSON.stringify(data), "h1");
            }
            Store.commit("Logined");
            Store.commit("setUserName", data.phoneNo);
            Store.commit("setUserInfo", data);
            if (data.type == 2) {
                Store.commit("closeVipBtn");
            }
        },
        wxLogin() {
            location.href =
                "https://open.weixin.qq.com/connect/qrconnect?appid=wx2f2243594e584069&redirect_uri=" +
                encodeURI("https://dqc.dgg.net") +
                "&response_type=code&scope=snsapi_login&state=2014#wechat_redirect";
        }
    }
};
</script>
<style scoped>
@import url("../../assets/css/login");
* {
    box-sizing: border-box;
}
</style>